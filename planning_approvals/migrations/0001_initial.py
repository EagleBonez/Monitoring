# Generated by Django 2.2.9 on 2020-04-14 21:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Parish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parish', models.CharField(blank=True, max_length=20, null=True)),
                ('settlement', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name_plural': 'Parishes',
            },
        ),
        migrations.CreateModel(
            name='PlanningApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_ref', models.CharField(blank=True, max_length=20, null=True)),
                ('policy', models.CharField(blank=True, max_length=20, null=True)),
                ('superseded_by_app', models.CharField(blank=True, max_length=20, null=True)),
                ('superseded_date', models.DateField(blank=True, null=True)),
                ('address', models.TextField()),
                ('proposal', models.TextField()),
                ('app_type', models.CharField(blank=True, choices=[('a', 'Allocation'), ('f', 'Full Planning'), ('o', 'Outline'), ('pn', 'Prior Notification'), ('pip', 'Permission in Priciple'), ('rm', 'Reserved Matters')], help_text='Permission type', max_length=5, null=True)),
                ('decision_date', models.DateField(blank=True, null=True)),
                ('appeal_decision_date', models.DateField(blank=True, null=True)),
                ('committee_decision_date', models.DateField(blank=True, null=True)),
                ('lapse_date', models.DateField(blank=True, null=True)),
                ('dev_type', models.CharField(blank=True, choices=[('new', 'New Building(s)'), ('cou', 'Change of Use'), ('rebld', 'Rebuild Applications'), ('conv', 'Conversion of a dwellings'), ('dem', 'Demolition of floorspace')], help_text='Development type', max_length=5, null=True)),
                ('dev_class', models.CharField(blank=True, choices=[('inf', 'Infill 1-2 dwellings'), ('grp', 'Group 3-8 dwellings'), ('est', 'Estate 9+ dwellings'), ('cou', 'Residential Change of Use'), ('con', 'Residential conversion'), ('dem', 'Demolition of a dwelling'), ('prk', 'Park Homes development'), ('rep', 'Replacement dwelling')], help_text='Development class', max_length=5, null=True)),
                ('pdl', models.CharField(blank=True, choices=[('g', 'Greenfield'), ('b', 'Brownfield'), ('m', 'Mix of Greenfield and Brownfield')], help_text='Greenfield / Brownfield land', max_length=1, null=True)),
                ('site_capacity', models.IntegerField(default=0, help_text='Total no. of dwellings permitted')),
                ('units_lost', models.IntegerField(default=0, help_text='No. of dwellings lost through development of site')),
                ('lapsed', models.BooleanField(default=False, help_text="Where permission not implemented before lapse date, manually set application to 'lapsed' status")),
                ('not_applicable', models.BooleanField(default=False, help_text='Omit site from monitoring data, without deleting record')),
                ('current_status', models.CharField(help_text='Current status of application', max_length=30)),
                ('year_01', models.IntegerField(default=0)),
                ('year_02', models.IntegerField(default=0)),
                ('year_03', models.IntegerField(default=0)),
                ('year_04', models.IntegerField(default=0)),
                ('year_05', models.IntegerField(default=0)),
                ('year_06', models.IntegerField(default=0)),
                ('year_07', models.IntegerField(default=0)),
                ('year_08', models.IntegerField(default=0)),
                ('year_09', models.IntegerField(default=0)),
                ('year_10', models.IntegerField(default=0)),
                ('year_11', models.IntegerField(default=0)),
                ('year_12', models.IntegerField(default=0)),
                ('year_13', models.IntegerField(default=0)),
                ('year_14', models.IntegerField(default=0)),
                ('year_15', models.IntegerField(default=0)),
                ('year_16', models.IntegerField(default=0)),
                ('year_17', models.IntegerField(default=0)),
                ('year_18', models.IntegerField(default=0)),
                ('year_19', models.IntegerField(default=0)),
                ('year_20', models.IntegerField(default=0)),
                ('traj_comments', models.TextField(blank=True, null=True)),
                ('traj_internal_notes', models.TextField(blank=True, null=True)),
                ('deliverable', models.CharField(blank=True, choices=[('A', 'a) Site is not major development'), ('B', 'b) Site with detailed planning permission'), ('C', 'c) Site with outline planning permission with clear evidence that housing completions will begin on site within five years'), ('D', 'd) Site with permission in principle with clear evidence that housing completions will begin on site within five years'), ('E', 'e) Site allocated within the development plan with clear evidence that housing completions will begin on site within five years'), ('F', 'f) Site identified on a brownfield register with clear evidence that housing completions will begin on site within five years'), ('G', 'g) Site without consent but with clear evidence that housing completions will begin on site within five years'), ('H', 'h) Site is not considered deliverable within five years or there is insufficient evidence site will be delivered within five years')], help_text='How permission meets deliverable definition in national policy', max_length=1, null=True)),
                ('additional_app', models.TextField(blank=True, help_text='Relevant details of additional applications (e.g. new applications pending determination)', null=True)),
                ('planning_history', models.TextField(blank=True, help_text='Details of previous applications on site', null=True)),
                ('application_docs_url', models.URLField(blank=True, help_text='Link to online planning application documents', max_length=255, null=True)),
                ('site_plan_url', models.URLField(blank=True, help_text='Link to site plan', max_length=255, null=True)),
                ('easting', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('northing', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('site_area', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parish', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='planning_approvals.Parish')),
            ],
            options={
                'ordering': ['app_ref'],
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_ref', models.CharField(help_text='Reference for site', max_length=20)),
                ('site_name', models.CharField(max_length=80)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['site_ref'],
            },
        ),
        migrations.CreateModel(
            name='Plot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plot_no', models.CharField(blank=True, max_length=20, null=True)),
                ('bc_ref', models.CharField(blank=True, max_length=20, null=True)),
                ('beds', models.IntegerField(blank=True, null=True)),
                ('tenure', models.CharField(blank=True, choices=[('m', 'Market'), ('a', 'Affordable'), ('i', 'Intermediate'), ('s', 'Starter Homes')], help_text='Select tenure', max_length=1, null=True)),
                ('plot_type', models.CharField(blank=True, choices=[('bs', 'Bedsits / studios'), ('cf', 'Cluster flats'), ('fm', 'Flats / maisonettes'), ('hb', 'Houses / bungalows'), ('lw', 'Live-work units'), ('ph', 'Park homes'), ('sh', 'Sheltered housing'), ('sb', 'Self-build plots'), ('un', 'Unknown')], help_text='Select plot type', max_length=2, null=True)),
                ('plot_dev', models.CharField(blank=True, choices=[('cou', 'Change of Use'), ('con', 'Conversion of a dwelling'), ('dem', 'Demolition'), ('new', 'New building'), ('reb', 'Rebuild application')], help_text='Select development type', max_length=3, null=True)),
                ('commenced_date', models.DateField(blank=True, null=True)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('superseded_date', models.DateField(blank=True, null=True)),
                ('superseded_by_app', models.CharField(blank=True, max_length=20, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('planning_app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='planning_approvals.PlanningApp')),
            ],
        ),
        migrations.AddField(
            model_name='planningapp',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='planning_approvals.Site'),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(help_text='Add a note')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('planning_app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='planning_approvals.PlanningApp')),
            ],
        ),
    ]
